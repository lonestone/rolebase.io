fragment Org on org {
  id
  name
  archived
  createdAt
  defaultWorkedMinPerWeek
  slug
}

# This fragment is expensive, so we avoid using it in queries
# and use OrgFullLight instead,
# then we reconstruct OrgFull in store/org.ts
fragment OrgFull on org {
  ...Org
  circles(where: { archived: { _eq: false } }) {
    ...CircleFull
  }
  roles(where: { archived: { _eq: false }, base: { _eq: true } }) {
    ...Role
  }
  members(where: { archived: { _eq: false } }) {
    ...Member
  }
  skill_categories {
    ...SkillCategory
  }
}

fragment OrgFullLight on org {
  ...Org
  circles(where: { archived: { _eq: false } }) {
    ...Circle
    members(where: { archived: { _eq: false } }) {
      id
      memberId
      avgMinPerWeek
    }
  }
  roles(where: { archived: { _eq: false } }) {
    ...Role
  }
  members(where: { archived: { _eq: false } }) {
    ...Member
  }
  skill_categories {
    ...SkillCategory
  }
}
