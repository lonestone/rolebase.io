query getCircle($id: uuid!) {
  circle_by_pk(id: $id) {
    ...Circle
  }
}

query getPublicCircles($orgId: uuid!) {
  circle(where: { orgId: { _eq: $orgId }, archived: { _eq: false } }) {
    id
    orgId
    roleId
    parentId
    members(where: { archived: { _eq: false } }) {
      id
      memberId
    }
    invitedCircleLinks {
      invitedCircle {
        id
      }
    }
  }
  role(where: { orgId: { _eq: $orgId }, archived: { _eq: false } }) {
    id
    orgId
    base
    name
    purpose
    singleMember
    parentLink
    colorHue
  }
  member(where: { orgId: { _eq: $orgId }, archived: { _eq: false } }) {
    id
    orgId
    name
    picture
  }
}

mutation createCircle($orgId: uuid!, $roleId: uuid!, $parentId: uuid) {
  insert_circle_one(
    object: { orgId: $orgId, roleId: $roleId, parentId: $parentId }
  ) {
    ...Circle
  }
}

mutation createCircles($circles: [circle_insert_input!]!) {
  insert_circle(objects: $circles) {
    returning {
      ...Circle
      role {
        ...Role
      }
    }
  }
}

mutation updateCircle($id: uuid!, $values: circle_set_input!) {
  update_circle_by_pk(pk_columns: { id: $id }, _set: $values) {
    ...Circle
    role {
      name
    }
    parent {
      role {
        name
      }
    }
  }
}

mutation archiveCircles($circlesIds: [uuid!]!, $rolesIds: [uuid!]!) {
  update_circle(where: { id: { _in: $circlesIds } }, _set: { archived: true }) {
    returning {
      id
    }
  }
  update_role(where: { id: { _in: $rolesIds } }, _set: { archived: true }) {
    returning {
      id
    }
  }
}
