fragment LogFields on log {
  id
  orgId
  userId
  memberId
  memberName
  meetingId
  createdAt
  display
  changes
  cancelLogId
  cancelMemberId
  cancelMemberName
  canceled
}

subscription lastLogs($orgId: uuid!) {
  log(
    where: { orgId: { _eq: $orgId } }
    order_by: { createdAt: desc }
    limit: 100
  ) {
    ...LogFields
  }
}

subscription meetingLogs($meetingId: uuid!) {
  log(where: { meetingId: { _eq: $meetingId } }, order_by: { createdAt: asc }) {
    ...LogFields
  }
}

mutation createLog($values: log_insert_input!) {
  insert_log_one(object: $values) {
    ...LogFields
  }
}

mutation cancelLog($id: uuid!) {
  update_log_by_pk(pk_columns: { id: $id }, _set: { canceled: true }) {
    ...LogFields
  }
}
