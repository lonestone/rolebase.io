fragment ThreadPollAnswer on thread_poll_answer {
  id
  activityId
  userId
  choicesPoints
  createdAt
}

subscription threadPollAnswers($activityId: uuid!) {
  thread_poll_answer(where: { activityId: { _eq: $activityId } }) {
    ...ThreadPollAnswer
  }
}

mutation createThreadPollAnswer($values: thread_poll_answer_insert_input!) {
  insert_thread_poll_answer_one(object: $values) {
    ...ThreadPollAnswer
  }
}

mutation updateThreadPollAnswer(
  $id: uuid!
  $values: thread_poll_answer_set_input!
) {
  update_thread_poll_answer_by_pk(pk_columns: { id: $id }, _set: $values) {
    ...ThreadPollAnswer
  }
}

mutation deleteThreadPollAnswers($activityId: uuid!) {
  delete_thread_poll_answer(where: { activityId: { _eq: $activityId } }) {
    returning {
      id
    }
  }
}
